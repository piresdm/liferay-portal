@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Commerce";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		CommerceConfiguration.commerceStoreFrontSetUp();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			CommerceConfiguration.commerceAdminTearDown();

			CommerceConfiguration.commerceInitializersTearDown();

			User.logoutPG();
		}
	}

	@description = "This is a test for COMMERCE-6283. EditSpecificationGroup"
	@ignore = "true"
	@priority = "3"
	test EditSpecificationGroup {
		property portal.acceptance = "false";

		// TODO COMMERCE-6283 EditSpecificationGroup

	}

	@description = "This is a test for COMMERCE-6284. EditSpecificationLabel"
	@ignore = "true"
	@priority = "3"
	test EditSpecificationLabel {
		property portal.acceptance = "false";

		// TODO COMMERCE-6284 EditSpecificationLabel
	}

	@description = "This is a test for COMMERCE-6282. RemoveSpecificationGroup"
	@ignore = "true"
	@priority = "3"
	test RemoveSpecificationGroup {
		property portal.acceptance = "false";

		// TODO COMMERCE-6282 RemoveSpecificationGroup
	}

	@description = "This is a test for COMMERCE-6281. RemoveSpecificationLabel"
	@priority = "3"
	test RemoveSpecificationLabel {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPCommerceSpecifications#RemoveSpecificationLabel";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Specifications");

		Click(
			key_itemName = "Dimensions",
			locator1 = "CommerceEntry#SPECIFIC_MENU_ITEM");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		AssertElementPresent(locator1 = "Message#SUCCESS");

		AssertElementNotPresent(
			key_itemName = "Dimensions",
			locator1 = "CommerceEntry#SPECIFIC_MENU_ITEM");
	}

}